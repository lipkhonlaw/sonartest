pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  stages {
  
    stage('Gitleaks Scan') {
      steps {
          sh "gitleaks detect --report-path gitleaks-report.json --verbose"
      }
      post { 
          always { 
              sh "git log -p gitleaks-report.json"
          }
      }
    }

    
    stage('SonarQube Scan') {
      steps {
        withSonarQubeEnv(installationName: 'sq1') { 
          sh './mvnw clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar'
        }
      }
    }
    
  }
}
